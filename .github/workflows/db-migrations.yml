name: DB Migrations

on:
  workflow_dispatch:
    inputs:
      target:
        description: Target environment
        required: true
        type: choice
        options: [stg, prd]

permissions:
  contents: read

jobs:
  migrate:
    runs-on: ubuntu-latest
    env:
      TARGET: ${{ github.event.inputs.target }}
      # host & kunci SSH dari secrets per target
      HOST: ${{ github.event.inputs.target == 'stg' && secrets.STG_HOST || secrets.PRD_HOST }}
      SSH_KEY_B64: ${{ github.event.inputs.target == 'stg' && secrets.STG_SSH_KEY_B64 || secrets.PRD_SSH_KEY_B64 }}
      # doppler
      DOPPLER_TOKEN: ${{ github.event.inputs.target == 'stg' && secrets.DOPPLER_TOKEN_STG || secrets.DOPPLER_TOKEN_PRD }}
      DOPPLER_CONFIG: ${{ github.event.inputs.target == 'stg' && 'stg' || 'prd' }}

    steps:
      - uses: actions/checkout@v4

      - name: Install psql
        run: |
          sudo apt-get update -y
          sudo apt-get install -y postgresql-client

      # GANTI: jangan pakai dopplerhq/cli-action (inputnya beda),
      # instal CLI & export env ke $GITHUB_ENV secara manual
      - name: Load env from Doppler → $GITHUB_ENV
        env:
          DOPPLER_TOKEN: ${{ env.DOPPLER_TOKEN }}
          DOPPLER_CONFIG: ${{ env.DOPPLER_CONFIG }}
        run: |
          set -e
          curl -Ls https://cli.doppler.com/install.sh | sudo sh
          doppler secrets download --no-file --format env \
            --project crive --config "$DOPPLER_CONFIG" >> "$GITHUB_ENV"

      - name: Prepare SSH
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          echo "$SSH_KEY_B64" | base64 -d > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H "$HOST" >> ~/.ssh/known_hosts

      - name: Package SQL
        run: |
          set -e
          tar -czf migs.tar.gz sql || true
          ls -lah migs.tar.gz

      - name: Upload package
        run: |
          set -e
          ssh -o StrictHostKeyChecking=yes deploy@"$HOST" 'mkdir -p /deploy/migs'
          scp -o StrictHostKeyChecking=yes migs.tar.gz deploy@"$HOST":/deploy/migs/migs.tar.gz

      # JALANKAN psql di server via container postgres dan join ke network yang sama dg db
      - name: Apply SQL (via docker network)
        env:
          # PENTING: pastikan step ini menerima DATABASE_URL dari $GITHUB_ENV
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: |
          set -euo pipefail
          # cek variabel harus ada
          : "${DATABASE_URL:?DATABASE_URL is required}"

          ssh -o StrictHostKeyChecking=yes deploy@"$HOST" "\
            set -euo pipefail; \
            cd /deploy/migs && tar -xzf migs.tar.gz || true; \
            # siapkan psql container di network Postgres
            PG_CONT=\$(docker ps --format '{{.Names}}\t{{.Ports}}' | awk '/5432/{print \$1; exit}'); \
            NET=\$(docker inspect -f '{{range \$k,\$v := .NetworkSettings.Networks}}{{printf \"%s\" \$k}}{{end}}' \"\$PG_CONT\"); \
            # gunakan URL dari runner; ganti host 'db' → nama container, dan matikan sslmode=require bila perlu
            DB_URL=\"${DATABASE_URL}\"; \
            DB_URL=\${DB_URL//@db:/@\${PG_CONT}:}; \
            DB_URL=\${DB_URL//sslmode=require/sslmode=disable}; \
            echo '[preflight] select 1'; \
            docker run --rm --network \"\$NET\" -e DATABASE_URL=\"\$DB_URL\" \
              -v \$(pwd)/sql:/work/sql:ro postgres:16-alpine sh -lc '\
                set -e; \
                psql \"\$DATABASE_URL\" -v ON_ERROR_STOP=1 -c \"select 1\"; \
                if ls /work/sql/up/*.sql >/dev/null 2>&1; then \
                  for f in \$(ls -1 /work/sql/up/*.sql | sort); do \
                    echo \"[apply] \$f\"; \
                    psql \"\$DATABASE_URL\" -v ON_ERROR_STOP=1 -f \"\$f\"; \
                  done; \
                elif [ -f /work/sql/up.sql ]; then \
                  echo \"[apply] /work/sql/up.sql\"; \
                  psql \"\$DATABASE_URL\" -v ON_ERROR_STOP=1 -f /work/sql/up.sql; \
                else \
                  echo \"[apply] tidak ada sql/up\"; \
                fi' \
          "
