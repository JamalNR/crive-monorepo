name: DB Migrations

on:
  workflow_dispatch:
    inputs:
      env:
        description: "Target environment"
        required: true
        type: choice
        options:
          - stg
          - prd
jobs:
  dry-run:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ci_migrate
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres -d ci_migrate"
          --health-interval=10s
          --health-retries=30
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - run: corepack enable
      - run: pnpm i --frozen-lockfile --ignore-scripts
      - name: Set DATABASE_URL (service)
        run: echo "DATABASE_URL=postgres://postgres:postgres@127.0.0.1:5432/ci_migrate" >> "$GITHUB_ENV"
      - name: Dry-run with local PG
        run: pnpm db:migrate:dry

  - name: Upload & run on STG
    env:
      HOST: ${{ secrets.STG_SSH_HOST }}
      USER: ${{ secrets.STG_SSH_USER }}
      PORT: ${{ secrets.STG_SSH_PORT }}
      DBURL: ${{ secrets.STG_DATABASE_URL }}
      NET:   ${{ secrets.STG_DOCKER_NETWORK }}
    run: |
      set -euo pipefail
      # tulis env untuk server (DIQUOTE AMAN)
      printf 'export DATABASE_URL=%q\n' "$DBURL" > env.remote
      printf 'export DOCKER_NETWORK=%q\n' "${NET:-}" >> env.remote

      # pastikan folder ada + upload file
      ssh  -4 -i id_stg -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -p "${PORT:-22}" "$USER@$HOST" 'mkdir -p ~/.crive-migs/work'
      scp  -4 -i id_stg -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -P "${PORT:-22}" env.remote migs.tgz "$USER@$HOST:~/.crive-migs/work/"

      # jalankan di server (source env.remote dulu)
      ssh  -4 -i id_stg -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -p "${PORT:-22}" "$USER@$HOST" \
        'set -euo pipefail; cd ~/.crive-migs/work; tar xzf migs.tgz; source env.remote; bash db/scripts/run_migs_remote.sh'

    - name: Upload & run on PRD
      env:
        HOST: ${{ secrets.PRD_SSH_HOST }}
        USER: ${{ secrets.PRD_SSH_USER }}
        PORT: ${{ secrets.PRD_SSH_PORT }}
        DBURL: ${{ secrets.PRD_DATABASE_URL }}
        NET:   ${{ secrets.PRD_DOCKER_NETWORK }}
      run: |
        set -euo pipefail
        printf 'export DATABASE_URL=%q\n' "$DBURL" > env.remote
        printf 'export DOCKER_NETWORK=%q\n' "${NET:-}" >> env.remote

        ssh  -4 -i id_prd -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -p "${PORT:-22}" "$USER@$HOST" 'mkdir -p ~/.crive-migs/work'
        scp  -4 -i id_prd -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -P "${PORT:-22}" env.remote migs.tgz "$USER@$HOST:~/.crive-migs/work/"

        ssh  -4 -i id_prd -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -p "${PORT:-22}" "$USER@$HOST" \
          'set -euo pipefail; cd ~/.crive-migs/work; tar xzf migs.tgz; source env.remote; bash db/scripts/run_migs_remote.sh'
