name: Build & Push API image to GHCR

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/api/**'
      - '.github/workflows/ghcr-api.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'apps/api/**'
      - '.github/workflows/ghcr-api.yml'

jobs:
  # PR hanya build (no login, no push)
  build:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/api
      - name: Build API (no push)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/api/Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # Push ke GHCR hanya saat push ke main
  docker:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/api
          tags: |
            type=raw,value=rc
            type=sha,format=short,prefix=sha-
      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/api/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Verify images
        run: |
          set -euo pipefail
          IMG=ghcr.io/${{ github.repository }}/api
          for i in {1..12}; do docker pull "$IMG:rc" && break || { echo "rc not ready ($i)"; sleep 5; }; done
          SHA=${GITHUB_SHA::7}
          for i in {1..12}; do docker pull "$IMG:sha-$SHA" && break || { echo "sha not ready ($i)"; sleep 5; }; done
