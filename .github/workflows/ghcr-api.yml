name: Build & Push API image to GHCR

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/api/**'
      - '.github/workflows/ghcr-api.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'apps/api/**'
      - '.github/workflows/ghcr-api.yml'

permissions:
  contents: read
  packages: write

env:
  IMAGE: ghcr.io/${{ github.repository }}/api

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - id: meta
        name: Docker metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          tags: |
            type=raw,value=rc
            type=sha,format=short,prefix=sha-

      # PR: build saja (tanpa push)
      - name: Build (PR only)
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/api/Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Push ke GHCR hanya saat push ke main
      - name: Login GHCR
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (main)
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/api/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Verify images (main)
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: |
          set -euo pipefail
          for i in {1..12}; do docker pull "${{ env.IMAGE }}:rc" && break || { echo "rc not ready ($i)"; sleep 5; }; done
          SHA=${GITHUB_SHA::7}
          for i in {1..12}; do docker pull "${{ env.IMAGE }}:sha-$SHA" && break || { echo "sha not ready ($i)"; sleep 5; }; done
