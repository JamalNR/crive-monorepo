name: Build & Push API to GHCR

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/api/**'
      - '.github/workflows/ghcr-api.yml'
      - 'pnpm-workspace.yaml'
      - 'pnpm-lock.yaml'
      - 'package.json'
  pull_request:
    branches: [ main ]
    paths:
      - 'apps/api/**'
      - '.github/workflows/ghcr-api.yml'
      - 'pnpm-workspace.yaml'
      - 'pnpm-lock.yaml'
      - 'package.json'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/api

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      # Login hanya saat push (bukan PR)
      - name: Login to GHCR
        if: ${{ github.event_name == 'push' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=rc
            type=sha,format=short,prefix=sha-

      # ---- Build untuk PR (tanpa push) ----
      - name: Build (PR only)
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/api/Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # ---- Build & Push untuk main ----
      - name: Build and Push (main)
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/api/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # ---- Verifikasi image sudah bisa di-pull ----
      - name: Verify images (pull)
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        shell: bash
        env:
          IMG: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        run: |
          set -euo pipefail
          for i in {1..12}; do
            if docker pull "${IMG}:rc"; then
              echo "rc OK"; break
            fi
            echo "rc not ready ($i)"; sleep 5
          done
          short_sha="${GITHUB_SHA::7}"
          for i in {1..12}; do
            if docker pull "${IMG}:sha-${short_sha}"; then
              echo "sha OK"; break
            fi
            echo "sha not ready ($i)"; sleep 5
          done
