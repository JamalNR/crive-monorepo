name: Build and Push Docker Image

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR (GITHUB_TOKEN)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # PERBAIKAN UTAMA: format yang benar untuk metadata action
      - name: Extract metadata (tags, labels)
        id: meta                                    # WAJIB: step ID untuk referensi
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |                                   # BENAR: gunakan pipe operator
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=rc
            type=raw,value=latest,enable={{is_default_branch}}
          flavor: |                                 # Format multiline untuk flavor
            latest=auto
          labels: |                                 # Format multiline untuk labels
            org.opencontainers.image.title=${{ github.repository }}
            org.opencontainers.image.description=Docker image for ${{ github.repository }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/api/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}     # Referensi output dengan benar
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify images (pull)
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: |
          set -e
          for i in {1..10}; do
            docker pull ${{ env.REGISTRY }}/${{ github.repository }}:latest && break
            sleep 5
          done