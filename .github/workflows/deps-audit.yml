name: hardening/12: deps-audit gate

on:
  push: { branches: [hardening/12-licenses] }
  pull_request: { branches: [hardening/12-licenses] }

permissions: { contents: read }

concurrency:
  group: deps-audit-${{ github.ref }}
  cancel-in-progress: true

jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      - name: Enable Corepack & activate pnpm
        run: |
          set -euo pipefail
          corepack enable
          VER=$(node -p "(()=>{try{const pm=(require('./package.json').packageManager||'pnpm@10.14.0');return pm.split('@')[1]||'10.14.0'}catch(e){return '10.14.0'}})()")
          corepack prepare pnpm@${VER} --activate
          pnpm -v

      - name: Install deps (frozen, no scripts)
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: npm audit (JSON, prod only)
        run: |
          set -euo pipefail
          npm audit --omit=dev --json > npm-audit.json || true
          test -s npm-audit.json

      - name: Enforce policy (fail on high/critical)
        run: |
          set -euo pipefail
          H=$(jq -r '.metadata.vulnerabilities.high // 0' npm-audit.json)
          C=$(jq -r '.metadata.vulnerabilities.critical // 0' npm-audit.json)
          echo "High=$H  Critical=$C"
          if [ "$H" -gt 0 ] || [ "$C" -gt 0 ]; then
            echo "::error::Vulnerability policy violated (high/critical found)."
            exit 1
          fi

      - name: Upload audit artifact
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit
          path: npm-audit.json
