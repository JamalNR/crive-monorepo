name: Hardening/12 licenses
on:
  pull_request:
  push:
    branches: [main, hardening/**, feat/**]
permissions:
  contents: read
jobs:
  licenses:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'

      - name: Setup pnpm 10.14.0
        uses: pnpm/action-setup@v4
        with:
          version: 10.14.0
          run_install: false

      - name: Install (frozen, ignore scripts)
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Generate license report (JSON)
        run: |
          pnpm dlx --package license-checker-rseidelsohn@3.4.2 license-checker \
            --json --production --relativeLicensePath --excludePrivatePackages \
            > license-report.json

      - name: Upload license-report.json
        uses: actions/upload-artifact@v4
        with:
          name: license-report
          path: license-report.json
          retention-days: 14

      - name: Gate denylist (AGPL/GPL/LGPL/SSPL/BUSL)
        shell: bash
        run: |
          jq -r 'to_entries[] | [.key, .value.licenses] | @tsv' license-report.json > /tmp/licenses.tsv
          echo "### License Gate" >> $GITHUB_STEP_SUMMARY
          echo "- Denylist: AGPL, GPL, LGPL, SSPL, BUSL" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          DENY_RE='(^|[^A-Z])(AGPL|GPL-3\.0|GPL-2\.0|LGPL|SSPL|BUSL)([^A-Z]|$)'
          BAD=$(grep -Ei "$DENY_RE" /tmp/licenses.tsv || true)
          if [ -n "$BAD" ]; then
            echo "Paket terlarang terdeteksi:"
            echo "$BAD"
            echo "#### ❌ Dilarang" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "$BAD" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          echo "#### ✅ Lulus denylist" >> $GITHUB_STEP_SUMMARY

      - name: Warn unknown licenses (non-blocking)
        if: always()
        run: |
          UNK=$(jq -r 'to_entries[] | select((.value.licenses|tostring|ascii_downcase)=="unknown") | .key' license-report.json || true)
          if [ -n "$UNK" ]; then
            echo "Unknown licenses (warning):"
            echo "$UNK"
            echo "#### ⚠️ Unknown licenses (warning)" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "$UNK" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi
