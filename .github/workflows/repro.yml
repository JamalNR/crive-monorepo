name: Reproducible build

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  repro:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-node@v4
        with: { node-version: 24.x }

      - name: Prepare artifacts dir
        run: mkdir -p artifacts/repro

      - name: Resolve pnpm version from packageManager (fallback 10.14.0)
        id: pv
        shell: bash
        run: |
          set -euo pipefail
          V=$(node -e "try{const pm=require('./package.json').packageManager||'pnpm@10.14.0';console.log(pm.split('@')[1]||'10.14.0')}catch(e){console.log('10.14.0')}")
          echo "version=$V" >> "$GITHUB_OUTPUT"

      - name: Setup pnpm via corepack (try)
        shell: bash
        run: |
          set -euxo pipefail
          corepack enable
          corepack prepare "pnpm@${{ steps.pv.outputs.version }}" --activate || true

      - uses: pnpm/action-setup@v4
        with:
          version: ${{ steps.pv.outputs.version }}
          run_install: false
          dest: ~/setup-pnpm

      - name: Verify pnpm & PATH
        env: { PNPM_HOME: /home/runner/setup-pnpm/node_modules/.bin }
        run: |
          set -x
          which pnpm || true
          pnpm --version
          echo "$PATH"

      - name: Install deps (frozen, no scripts)
        shell: bash
        run: |
          if [ -f pnpm-lock.yaml ]; then
            pnpm install --frozen-lockfile --ignore-scripts
          else
            echo "::notice title=pnpm::pnpm-lock.yaml missing; using --no-frozen-lockfile"
            pnpm install --no-frozen-lockfile --ignore-scripts
          fi

      - name: Build (skip paket tanpa script)
        run: |
          pnpm -w -r --if-present run build:repro || pnpm -w -r --if-present run build

      - name: Repro check (tracked files only)
        shell: bash
        run: |
          set -euo pipefail
          git status --porcelain=v1 > artifacts/repro/git-status.txt
          if ! git diff --quiet --ignore-submodules --no-ext-diff; then
            git --no-pager diff > artifacts/repro/diff.patch
            echo "::error title=repro::Build produced changes to tracked files (see diff.patch)"
            exit 1
          fi
          if ! git diff --cached --quiet --ignore-submodules --no-ext-diff; then
            git --no-pager diff --cached > artifacts/repro/diff-staged.patch
            echo "::error title=repro::Staged changes to tracked files (see diff-staged.patch)"
            exit 1
          fi

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: repro-${{ github.sha }}
          path: artifacts/repro/*
          if-no-files-found: warn
